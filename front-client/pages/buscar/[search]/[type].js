import { useEffect, useState } from 'react'
import { useLazyQuery } from '@apollo/client'
import Head from 'next/head'
import { Buscar } from 'container/buscar'
import { ContainerProductSearch } from 'container/buscar/styled'
import { useRouter } from 'next/router'
import { GET_ALL_PRODUCTS_SEARCH, GET_ALL_STORE_SEARCH } from 'container/buscar/queries'
import { ListRestaurant } from 'container/restaurantes/restaurant'
import CardProduct from 'container/RestaurantProfile/CardProducts'

export default function HomeView() {
    const location = useRouter()
    const { search, type } = location.query
    const [getAllMatchesProducts, { data }] = useLazyQuery(GET_ALL_PRODUCTS_SEARCH)
    const [getAllMatchesStore, { data: dataStore }] = useLazyQuery(GET_ALL_STORE_SEARCH)
    const [showMore, setShowMore] = useState(40)
    useEffect(() => {
        if (type === 'PLATOS') getAllMatchesProducts({ variables: { search: search, min: 0, max: showMore } })
        if (type === 'RESTAURANT') getAllMatchesStore({ variables: { search: search, min: 0, max: showMore } })
        if (type === 'TODO') {
            getAllMatchesProducts({ variables: { search: search, min: 0, max: showMore } })
            getAllMatchesStore({ variables: { search: search, min: 0, max: showMore } })
        }
    }, [data, search, type, location])
    return (
        <div >
            <Head>
                <title>Busca {search} {type}</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Buscar
                type={type}
            />
            {type === 'RESTAURANT' && <ListRestaurant
                setShowMore={setShowMore}
                catStoreId={type}
                showMore={showMore}
                data={dataStore?.getAllMatchesStore || []}
            />
            }
            {type === 'PLATOS' && <ContainerProductSearch>
                {data?.getAllMatchesProducts ? data?.getAllMatchesProducts.map(food => {
                    return (
                        <CardProduct food={food} key={food.pId} /* onClick={() => getOneProduct(food)} */ />
                    )
                }) : <div>No products</div>}
            </ContainerProductSearch>}
        </div>
    )
}
